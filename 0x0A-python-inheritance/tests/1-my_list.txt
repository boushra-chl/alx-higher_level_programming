Test cases for 1-my_list module
===============================

The 1-my_list module defines a class MyList that inherites from list

Usage
=====

Importing Class from the module:
	>>> MyList = __import__('1-my_list').MyList

Printing a list in acsending order
	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(my_list)
	[1, 4, 2, 3, 5]

not defined object
	>>> MyList = __import__('1-my_list').MyList
	>>> list2.print_sorted()
	Traceback (most recent call last):
	  File "./1-main.py", line 13, in <module>
	    list2.print_sorted()
	NameError: name 'list2' is not defined

Passed a list
	>>> a = [1, 4, 0]
	>>> my_list = MyList(a)
	>>> my_list.print_sorted()
	[0, 1, 4]

Empty list
	>>> a = []
	>>> my_list = MyList(a)
	>>> my_list.print_sorted()
	[]

Unique number
	>>> a = [2]
        >>> my_list = MyList(a)
        >>> my_list.print_sorted()
        [2]

Same number
	>>> my_list = MyList()
        >>> my_list.append(1)
        >>> my_list.append(1)
        >>> my_list.append(1)
        >>> my_list.append(1)
        >>> print(my_list)
        [1, 1, 1, 1]
        >>> my_list.print_sorted()
        [1, 1, 1, 1]

Parent object
	>>> my_list = [1, 6, 4]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	  File "./1-main.py", line 14, in <module>
	    my_list.print_sorted()
	AttributeError: 'list' object has no attribute 'print_sorted'

Negative numbers
	>>> my_list = MyList()
        >>> my_list.append(-1)
        >>> my_list.append(-6)
        >>> my_list.append(0)
        >>> my_list.append(56)
        >>> print(my_list)
        [-1, -6, 0, 56]
        >>> my_list.print_sorted()
        [-6, -1, 0, 56]

