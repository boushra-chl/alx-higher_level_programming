Test cases for 2-matrix_divided module
======================================

The 2-divided_matrix module takes a matrix and divids it by a number

Usage
=====

Importing function from the module:
	>>> matrix_divided = __import__('2-divided_matrix').divided_matrix

Dividing a matrix of integers by integer
	>>> matrix_divided([[4, 2], [6, 8]], 2)
	[[2, 1], [2, 4]]

Dividing a matrix of floats by floats
	>>> matrix_divided([[4.5, 2.5], [6.5, 8.5]], 1.5)
	[[3.0, 1.67], [4.34, 5.67]]

Dividing a matrix of integers by float
	>>> matrix_divided([[4, 2], [6, 8]], 2.5)
	[[1.6, 0.8], [2.4, 3.2]]

Dividing a matrix of floats by integer
	>>> matrix_divided([[4.5, 2.5], [6.5, 8.5]], 1)
	[[4.5, 2.5], [6.5, 5.5]]

Dividing a matrix by 0
	>>> matrix_divided([[4.5, 2.5], [6.5, 8.5]], 1)
	division by zero

Dividing a matrix of integers by character
        >>> matrix_divided([[4, 2], [6, 8]], "a")
	div must be a number

Dividing a matrix with chracter by number
        >>> matrix_divided([[4, "a"], [6, 8]], 2)
	matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix of different rows by number
	>>> matrix_divided([[4, 2], [6]], 2.5)
	Each row of the matrix must have the same size

Dividing a matrix of numbers by negative number
	>>> matrix_divided([[4.5, 2.5], [6.5, 8.5]], -1)
        [[-4.5, -2.5], [-6.5, -5.5]]


